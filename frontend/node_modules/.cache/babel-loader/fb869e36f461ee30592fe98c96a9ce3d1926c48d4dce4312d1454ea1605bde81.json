{"ast":null,"code":"var _jsxFileName = \"D:\\\\GesPerform\\\\frontend\\\\src\\\\Components\\\\Mesperformences.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../CSS/performences.css';\nimport Logo from '../img/kpi.png';\nimport Ranking from '../img/ranking.png';\nimport { Link } from 'react-router-dom';\nimport Performencestemplate from './Performencestemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mesperformences() {\n  _s();\n  const [userMatricul, setMatricul] = useState(JSON.parse(localStorage.getItem('employee_detail')).num_matricul);\n  const [notes, setNotes] = useState([]);\n  const getNotes = () => {\n    fetch(`https://gesperform.online/public/api/getnotes`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        num_matricul: userMatricul\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setNotes(data.notes);\n    });\n  };\n  useEffect(() => {\n    getNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contain_performences\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contain_header_perf\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain_mynav\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          to: \"/acceuilemployee\",\n          className: \"retour_perf\",\n          children: \"Retour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: 'white'\n        },\n        className: \"\",\n        children: \"Vos performences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain_img_confirm\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          className: \"img_confirm_perf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my_performences\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Performencestemplate, {\n        Note: note\n      }, note.id_note, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Mesperformences, \"P/6r7LiL1XFCfW5NbDAPXIGRe2M=\");\n_c = Mesperformences;\nvar _c;\n$RefreshReg$(_c, \"Mesperformences\");","map":{"version":3,"names":["React","useState","useEffect","Logo","Ranking","Link","Performencestemplate","jsxDEV","_jsxDEV","Mesperformences","_s","userMatricul","setMatricul","JSON","parse","localStorage","getItem","num_matricul","notes","setNotes","getNotes","fetch","method","headers","body","stringify","then","response","json","data","console","log","className","children","style","textDecoration","color","to","fileName","_jsxFileName","lineNumber","columnNumber","src","map","note","Note","id_note","_c","$RefreshReg$"],"sources":["D:/GesPerform/frontend/src/Components/Mesperformences.js"],"sourcesContent":["import React , {useState , useEffect} from 'react'\nimport '../CSS/performences.css'\nimport Logo from '../img/kpi.png'\nimport Ranking from '../img/ranking.png'\nimport { Link } from 'react-router-dom'\nimport Performencestemplate from './Performencestemplate'\n\nexport default function Mesperformences() {\n\n  const [userMatricul , setMatricul] = useState(JSON.parse(localStorage.getItem('employee_detail')).num_matricul)\n  const [notes , setNotes] = useState([])\n \n \n  const getNotes = ()=>{\n  \n    fetch(`https://gesperform.online/public/api/getnotes`, {\n      method: 'POST',\n      headers: {\n        'Accept':'application/json',\n        'Content-Type':'application/json'\n      },\n      body:JSON.stringify({\n        num_matricul: userMatricul , \n      }) \n     \n    })\n    .then(response => response.json())\n    .then((data) =>{\n      console.log(data)\n      setNotes(data.notes);\n    })\n    \n  }\n\n\n  useEffect(()=>{\n    getNotes()\n  } , [])\n\n\n\n  return (\n    <div className='contain_performences'>\n      \n        <div className='contain_header_perf'>\n           <div className='contain_mynav'> \n             <Link style={{textDecoration:'none' , color:'black'}}  to='/acceuilemployee' className='retour_perf' >\n                Retour\n             </Link>\n           </div>  \n           \n            <h4 style={{color:'white'}} className=''>\n               Vos performences\n            </h4>\n    \n            <div className='contain_img_confirm'>\n               <img  src={Logo} className='img_confirm_perf'/>\n            </div>  \n        </div>\n\n        <div className='my_performences'>\n           \n           {\n              notes.map( note =>  <Performencestemplate\n                      key={note.id_note}\n                      Note={note}\n              /> )\n           }\n              \n\n        </div>\n\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}